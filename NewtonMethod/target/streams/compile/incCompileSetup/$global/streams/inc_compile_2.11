format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.8
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
9 items
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\factorialTailRec$.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\factorialTailRec$delayedInit$body.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\factorialTailRec.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newton$.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newton$delayedInit$body.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newton.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newtonBlocks$.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newtonBlocks$delayedInit$body.class
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newtonBlocks.class
binary dependencies:
6 items
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> C:\Program Files\Java\jre1.8.0_111\lib\rt.jar
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> C:\Users\Chandan Suri\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> C:\Program Files\Java\jre1.8.0_111\lib\rt.jar
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> C:\Users\Chandan Suri\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> C:\Program Files\Java\jre1.8.0_111\lib\rt.jar
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> C:\Users\Chandan Suri\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
0 items
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
9 items
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> factorialTailRec
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> factorialTailRec$
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> factorialTailRec$delayedInit$body
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> newton
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> newton$
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> newton$delayedInit$body
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> newtonBlocks
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> newtonBlocks$
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> newtonBlocks$delayedInit$body
used names:
68 items
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> *
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> -
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> <init>
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> ==
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> Any
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> App
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> Boolean
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> Int
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> Object
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> Predef
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> Unit
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> acc
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> factorial
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> factorialTailRec
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> loop
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> n
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> println
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> scala
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> *
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> +
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> -
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> /
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> <
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> <init>
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> Any
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> App
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> Boolean
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> Double
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> Int
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> Object
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> Predef
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> Unit
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> abs
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> guess
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> improve
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> isGoodEnough
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> newton
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> println
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> scala
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> sqrIter
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> sqrt
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> unary_-
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> x
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> *
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> +
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> -
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> /
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> <
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> <init>
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> Any
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> App
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> Boolean
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> Double
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> Int
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> Object
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> Predef
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> Unit
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> abs
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> guess
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> improve
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> isGoodEnough
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> newtonBlocks
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> println
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> scala
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> sqrIter
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> sqrt
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> unary_-
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> x
product stamps:
9 items
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\factorialTailRec$.class -> lastModified(1482947080276)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\factorialTailRec$delayedInit$body.class -> lastModified(1482947080286)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\factorialTailRec.class -> lastModified(1482947080256)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newton$.class -> lastModified(1482945645182)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newton$delayedInit$body.class -> lastModified(1482945645186)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newton.class -> lastModified(1482945645163)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newtonBlocks$.class -> lastModified(1482946182054)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newtonBlocks$delayedInit$body.class -> lastModified(1482946182064)
D:\ScalaCoursera\NewtonMethod\target\scala-2.11\classes\newtonBlocks.class -> lastModified(1482946181952)
source stamps:
3 items
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> hash(684afa6673b9e7dcc29b1257cd439332a23ab096)
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> hash(7bc141a2ae83ca9e2444bc939eb03bedc4737986)
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> hash(1b8df09a2fba6eb72f2b9bc959683ad9213564a8)
binary stamps:
2 items
C:\Program Files\Java\jre1.8.0_111\lib\rt.jar -> lastModified(1477022617183)
C:\Users\Chandan Suri\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar -> lastModified(1457105192000)
class names:
2 items
C:\Program Files\Java\jre1.8.0_111\lib\rt.jar -> java.lang.Object
C:\Users\Chandan Suri\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar -> scala.App
internal apis:
3 items
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwBNroKQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAac3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwtM4PZnQABm5vdGlmeXNxAH4ADNq/9/p0AAlmYWN0b3JpYWxzcQB+AAwH1zh4dAAEd2FpdHNxAH4ADAk1aHp0AA0kYXNJbnN0YW5jZU9mc3EAfgAM+FF1mHQABmVxdWFsc3NxAH4ADB0JExh0AAxhc0luc3RhbmNlT2ZzcQB+AAxGij1udAAOZXhlY3V0aW9uU3RhcnRzcQB+AAzwMQ+tdAAMc3luY2hyb25pemVkc3EAfgAM1kIOC3QADSRpc0luc3RhbmNlT2ZzcQB+AAyUT1dhdAAEbWFpbnNxAH4ADGghL4F0AAlub3RpZnlBbGxzcQB+AAzAgzgUdAAQZmFjdG9yaWFsVGFpbFJlY3NxAH4ADGhur2p0AAxpc0luc3RhbmNlT2ZzcQB+AAyP62cXdAACPT1zcQB+AAyzTAlvdAAFY2xvbmVzcQB+AAzrggOLdAAGJGluaXQkc3EAfgAMDtSHk3QACHRvU3RyaW5nc3EAfgAMvKbWoHQABGFyZ3NzcQB+AAzY8cFHdAACIT1zcQB+AAzJueDWdAAIZ2V0Q2xhc3NzcQB+AAwF+SkTdAACbmVzcQB+AAzkCvEEdAACZXFzcQB+AAyHEVRadAALZGVsYXllZEluaXRzcQB+AAwhGSwodAACIyNzcQB+AAyVvoykdAAIZmluYWxpemVzcQB+AAwOw9UXdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBLeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ACV1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAACdAAac2NhbGEuZGVwcmVjYXRlZE92ZXJyaWRpbmd0ABBzY2FsYS5kZXByZWNhdGVkc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AGRzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AS0wACWluaGVyaXRlZHEAfgBLTAAHcGFyZW50c3EAfgBLeHEAfgBpc3EAfgBkdXEAfgBGAAAAAHNxAH4AZHVxAH4ARgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4ATHEAfgBVdXEAfgBWAAAAAXNyABR4c2J0aS5hcGkuQW5ub3RhdGlvbt4OgaL2XAqyAgACWwAJYXJndW1lbnRzdAAfW0x4c2J0aS9hcGkvQW5ub3RhdGlvbkFyZ3VtZW50O0wABGJhc2VxAH4Ac3hwdXIAH1tMeHNidGkuYXBpLkFubm90YXRpb25Bcmd1bWVudDtRnaaPOCUPeAIAAHhwAAAAAXNyABx4c2J0aS5hcGkuQW5ub3RhdGlvbkFyZ3VtZW501kWx2AMbF3wCAAJMAARuYW1lcQB+AA1MAAV2YWx1ZXEAfgANeHB0AAB0ACooIm1haW4gc2hvdWxkIG5vdCBiZSBvdmVycmlkZGVuIiwiMi4xMS4wIilzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBodAAUZGVwcmVjYXRlZE92ZXJyaWRpbmdzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGhzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AI1zcQB+AFgAcQB+ACF1cQB+AFoAAAAAc3EAfgCAdAAEVW5pdHEAfgCGdXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4Ac3hwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AXXQABVBsYWlucQB+ADFzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AIFbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AGhzcQB+AIB0AAVBcnJheXEAfgCGdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AIB0AAZTdHJpbmdzcQB+AIRzcQB+AId1cQB+AIoAAAADc3EAfgCMdAAEamF2YXNxAH4AjHQABGxhbmdxAH4AkXNxAH4AZHVxAH4AqAAAAARzcQB+AIB0AANBcHBxAH4AhnNxAH4AgHQAC0RlbGF5ZWRJbml0cQB+AIZzcQB+AIB0AAZPYmplY3RxAH4ArHNxAH4AgHQAA0FueXEAfgCGdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVlGiK4ddXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABRoSvpmc7nn3MKbElfNQ5Myojqwlg==
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwZe8M3gAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAec3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwZWf4FnQABm5vdGlmeXNxAH4ADK5EptN0AAR3YWl0c3EAfgAMHNvIeHQADSRhc0luc3RhbmNlT2ZzcQB+AAzoU3ykdAAGZXF1YWxzc3EAfgAMeoU5h3QADGFzSW5zdGFuY2VPZnNxAH4ADAG4AKt0AA5leGVjdXRpb25TdGFydHNxAH4ADHLMAyl0AAxzeW5jaHJvbml6ZWRzcQB+AAzSOnUodAANJGlzSW5zdGFuY2VPZnNxAH4ADCoR76B0AAxpc0dvb2RFbm91Z2hzcQB+AAz0kGmGdAAEbWFpbnNxAH4ADLWXach0AAlub3RpZnlBbGxzcQB+AAxTlW7DdAAMaXNJbnN0YW5jZU9mc3EAfgAM7yGN1XQABm5ld3RvbnNxAH4ADOX77Cx0AARzcXJ0c3EAfgAM0TrZI3QAAj09c3EAfgAMXXn2T3QABWNsb25lc3EAfgAMSjbB8HQAB2ltcHJvdmVzcQB+AAx/14KBdAAGJGluaXQkc3EAfgAMGArMU3QACHRvU3RyaW5nc3EAfgAMhc1mE3QABGFyZ3NzcQB+AAxqyQrddAACIT1zcQB+AAzTFCAddAAIZ2V0Q2xhc3NzcQB+AAydCWuCdAAHc3FySXRlcnNxAH4ADKAkTul0AANhYnNzcQB+AAz3M1R5dAACbmVzcQB+AAwgm/xndAACZXFzcQB+AAz4yCSMdAALZGVsYXllZEluaXRzcQB+AAyWfLIHdAACIyNzcQB+AAxv2b5xdAAIZmluYWxpemVzcQB+AAynIinSdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBTeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAcQB+ACd1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAZNb2R1bGV1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAACdAAac2NhbGEuZGVwcmVjYXRlZE92ZXJyaWRpbmd0ABBzY2FsYS5kZXByZWNhdGVkc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AGxzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AU0wACWluaGVyaXRlZHEAfgBTTAAHcGFyZW50c3EAfgBTeHEAfgBxc3EAfgBsdXEAfgBOAAAAAHNxAH4AbHVxAH4ATgAAAAFzcgANeHNidGkuYXBpLkRlZlK+n+J8tDZpAgACTAAKcmV0dXJuVHlwZXQAEEx4c2J0aS9hcGkvVHlwZTtbAA92YWx1ZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9QYXJhbWV0ZXJMaXN0O3hxAH4AVHEAfgBddXEAfgBeAAAAAXNyABR4c2J0aS5hcGkuQW5ub3RhdGlvbt4OgaL2XAqyAgACWwAJYXJndW1lbnRzdAAfW0x4c2J0aS9hcGkvQW5ub3RhdGlvbkFyZ3VtZW50O0wABGJhc2VxAH4Ae3hwdXIAH1tMeHNidGkuYXBpLkFubm90YXRpb25Bcmd1bWVudDtRnaaPOCUPeAIAAHhwAAAAAXNyABx4c2J0aS5hcGkuQW5ub3RhdGlvbkFyZ3VtZW501kWx2AMbF3wCAAJMAARuYW1lcQB+AA1MAAV2YWx1ZXEAfgANeHB0AAB0ACooIm1haW4gc2hvdWxkIG5vdCBiZSBvdmVycmlkZGVuIiwiMi4xMS4wIilzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBwdAAUZGVwcmVjYXRlZE92ZXJyaWRpbmdzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AHBzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAAJzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQABXNjYWxhc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AJVzcQB+AGAAcQB+ACF1cQB+AGIAAAAAc3EAfgCIdAAEVW5pdHEAfgCOdXIAGltMeHNidGkuYXBpLlBhcmFtZXRlckxpc3Q79dM6HfKzcO4CAAB4cAAAAAFzcgAXeHNidGkuYXBpLlBhcmFtZXRlckxpc3TWxbwcZEl04wIAAloACmlzSW1wbGljaXRbAApwYXJhbWV0ZXJzdAAcW0x4c2J0aS9hcGkvTWV0aG9kUGFyYW1ldGVyO3hwAHVyABxbTHhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXI7z7jFXaXdtW0CAAB4cAAAAAFzcgAZeHNidGkuYXBpLk1ldGhvZFBhcmFtZXRlch9FrhfTSbDqAgAEWgAKaGFzRGVmYXVsdEwACG1vZGlmaWVydAAdTHhzYnRpL2FwaS9QYXJhbWV0ZXJNb2RpZmllcjtMAARuYW1lcQB+AA1MAAN0cGVxAH4Ae3hwAH5yABt4c2J0aS5hcGkuUGFyYW1ldGVyTW9kaWZpZXIAAAAAAAAAABIAAHhxAH4AZXQABVBsYWlucQB+ADVzcgAXeHNidGkuYXBpLlBhcmFtZXRlcml6ZWQWbO5pA8m7fwIAAkwACGJhc2VUeXBlcQB+AIlbAA10eXBlQXJndW1lbnRzdAARW0x4c2J0aS9hcGkvVHlwZTt4cQB+AHBzcQB+AIh0AAVBcnJheXEAfgCOdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAFzcQB+AIh0AAZTdHJpbmdzcQB+AIxzcQB+AI91cQB+AJIAAAADc3EAfgCUdAAEamF2YXNxAH4AlHQABGxhbmdxAH4AmXNxAH4AbHVxAH4AsAAAAARzcQB+AIh0AANBcHBxAH4AjnNxAH4AiHQAC0RlbGF5ZWRJbml0cQB+AI5zcQB+AIh0AAZPYmplY3RxAH4AtHNxAH4AiHQAA0FueXEAfgCOdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAABzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAVlGcsitdXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABR7wUGiroPKniREvJOesDvtxHN5hg==
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw+CpOsQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAbc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwcFELAnQABm5vdGlmeXNxAH4ADHQ64A50AAR3YWl0c3EAfgAMEQ/jMXQADSRhc0luc3RhbmNlT2ZzcQB+AAxY51X/dAAGZXF1YWxzc3EAfgAMM7ZmtXQADGFzSW5zdGFuY2VPZnNxAH4ADJfJBH90AA5leGVjdXRpb25TdGFydHNxAH4ADM2WOLR0AAxzeW5jaHJvbml6ZWRzcQB+AAye97C4dAANJGlzSW5zdGFuY2VPZnNxAH4ADFXQGDF0AARtYWluc3EAfgAMQkkDhHQACW5vdGlmeUFsbHNxAH4ADFSiX1Z0AAxpc0luc3RhbmNlT2ZzcQB+AAx8BuPTdAAEc3FydHNxAH4ADGpupj90AAI9PXNxAH4ADA5OmL90AAVjbG9uZXNxAH4ADCzizUF0AAxuZXd0b25CbG9ja3NzcQB+AAyYS6CLdAAGJGluaXQkc3EAfgAMozSC6HQACHRvU3RyaW5nc3EAfgAM4GTWLXQABGFyZ3NzcQB+AAwilIxsdAACIT1zcQB+AAwXAVWZdAAIZ2V0Q2xhc3NzcQB+AAyW9AIWdAADYWJzc3EAfgAMTvlS43QAAm5lc3EAfgAMgHGv/nQAAmVxc3EAfgAMCWKAyHQAC2RlbGF5ZWRJbml0c3EAfgAMnCx5/HQAAiMjc3EAfgAM0eIHAnQACGZpbmFsaXplc3EAfgAM0x4l93QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4ATXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHEAfgArdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAnQAGnNjYWxhLmRlcHJlY2F0ZWRPdmVycmlkaW5ndAAQc2NhbGEuZGVwcmVjYXRlZHNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBmc3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AE1MAAlpbmhlcml0ZWRxAH4ATUwAB3BhcmVudHNxAH4ATXhxAH4Aa3NxAH4AZnVxAH4ASAAAAABzcQB+AGZ1cQB+AEgAAAABc3IADXhzYnRpLmFwaS5EZWZSvp/ifLQ2aQIAAkwACnJldHVyblR5cGV0ABBMeHNidGkvYXBpL1R5cGU7WwAPdmFsdWVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvUGFyYW1ldGVyTGlzdDt4cQB+AE5xAH4AV3VxAH4AWAAAAAFzcgAUeHNidGkuYXBpLkFubm90YXRpb27eDoGi9lwKsgIAAlsACWFyZ3VtZW50c3QAH1tMeHNidGkvYXBpL0Fubm90YXRpb25Bcmd1bWVudDtMAARiYXNlcQB+AHV4cHVyAB9bTHhzYnRpLmFwaS5Bbm5vdGF0aW9uQXJndW1lbnQ7UZ2mjzglD3gCAAB4cAAAAAFzcgAceHNidGkuYXBpLkFubm90YXRpb25Bcmd1bWVudNZFsdgDGxd8AgACTAAEbmFtZXEAfgANTAAFdmFsdWVxAH4ADXhwdAAAdAAqKCJtYWluIHNob3VsZCBub3QgYmUgb3ZlcnJpZGRlbiIsIjIuMTEuMCIpc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AanQAFGRlcHJlY2F0ZWRPdmVycmlkaW5nc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBqc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAACc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AAVzY2FsYXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgCPc3EAfgBaAHEAfgAfdXEAfgBcAAAAAHNxAH4AgnQABFVuaXRxAH4AiHVyABpbTHhzYnRpLmFwaS5QYXJhbWV0ZXJMaXN0O/XTOh3ys3DuAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJMaXN01sW8HGRJdOMCAAJaAAppc0ltcGxpY2l0WwAKcGFyYW1ldGVyc3QAHFtMeHNidGkvYXBpL01ldGhvZFBhcmFtZXRlcjt4cAB1cgAcW0x4c2J0aS5hcGkuTWV0aG9kUGFyYW1ldGVyO8+4xV2l3bVtAgAAeHAAAAABc3IAGXhzYnRpLmFwaS5NZXRob2RQYXJhbWV0ZXIfRa4X00mw6gIABFoACmhhc0RlZmF1bHRMAAhtb2RpZmllcnQAHUx4c2J0aS9hcGkvUGFyYW1ldGVyTW9kaWZpZXI7TAAEbmFtZXEAfgANTAADdHBlcQB+AHV4cAB+cgAbeHNidGkuYXBpLlBhcmFtZXRlck1vZGlmaWVyAAAAAAAAAAASAAB4cQB+AF90AAVQbGFpbnEAfgAxc3IAF3hzYnRpLmFwaS5QYXJhbWV0ZXJpemVkFmzuaQPJu38CAAJMAAhiYXNlVHlwZXEAfgCDWwANdHlwZUFyZ3VtZW50c3QAEVtMeHNidGkvYXBpL1R5cGU7eHEAfgBqc3EAfgCCdAAFQXJyYXlxAH4AiHVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAABc3EAfgCCdAAGU3RyaW5nc3EAfgCGc3EAfgCJdXEAfgCMAAAAA3NxAH4AjnQABGphdmFzcQB+AI50AARsYW5ncQB+AJNzcQB+AGZ1cQB+AKoAAAAEc3EAfgCCdAADQXBwcQB+AIhzcQB+AIJ0AAtEZWxheWVkSW5pdHEAfgCIc3EAfgCCdAAGT2JqZWN0cQB+AK5zcQB+AIJ0AANBbnlxAH4AiHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAAAc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFZRnrwV3VyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0ADdEOlxTY2FsYUNvdXJzZXJhXE5ld3Rvbk1ldGhvZFx0YXJnZXRcc2NhbGEtMi4xMVxjbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUG43wmi+6brcvK5vJWWg62SE1ZKg=
external apis:
0 items
source infos:
3 items
D:\ScalaCoursera\NewtonMethod\src\main\scala\factorialTailRec.scala -> 
AAAAAAAAAAA=
D:\ScalaCoursera\NewtonMethod\src\main\scala\newton.scala -> 
AAAAAAAAAAA=
D:\ScalaCoursera\NewtonMethod\src\main\scala\newtonBlocks.scala -> 
AAAAAAAAAAA=
compilations:
6 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWUZp7y11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEv
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWUZxZWJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEv
2 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWUZx7DZ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEv
3 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWUZyyK11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEv
4 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWUZ68Fd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEv
5 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABWUaIrh11cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAN0Q6XFNjYWxhQ291cnNlcmFcTmV3dG9uTWV0aG9kXHRhcmdldFxzY2FsYS0yLjExXGNsYXNzZXN0AAEv
